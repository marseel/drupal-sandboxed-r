source("blacklist.R")
source("init.R")
source("masked.functions.R")
install.packages('lattice')
source("masked.functions.R")
source("sandbox.R")
sandbox("print(1)")
print(1);
sandbox("print(1)")
1
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
supressWarnings
library(warning)
suppressWarnings(warning("testit"))
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
source("sandbox.R")
sandbox("1;1;")
res <- tryCatch(sandbox("print(1)"), error = function(e) e)
any(class(res) == 'error')
src <- URLdecode("print%28%22asd%22%29")
src
src <- strsplit(src, '\n')[[1]]
src
res <- tryCatch(sandbox(src), error = function(e) e)
res
assignInNamespace('formula.character', sandboxR:::formula.character, ns = 'stats')
source("sandbox.R")
p <- base::parse(text = src)
src
p
f = src[[1]]
f
deparse(f)
envir <- sandbox.env()
sandbox.pretest(deparse(f), envir = envir)
xx <- textConnection(f)
xx
setTimeLimit(elapsed = inf)
setTimeLimit(elapsed = Inf)
xx
source("sandbox.R")
sandbox("1;1;")
